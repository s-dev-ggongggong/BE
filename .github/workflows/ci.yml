name: Backend CI

on:
  push:
    branches:
      - dev1
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/bst_rsa
          chmod 600 ~/.ssh/bst_rsa
          ssh-keyscan -H ${{ secrets.BST_HOST }} >> ~/.ssh/known_hosts

      - name: Create SSH Tunnel to Bastion
        run: |
          ssh -f -N -L 2222:${{ secrets.E_BACK }}:22 ec2-user@${{ secrets.BST_HOST }} -i ~/.ssh/bst_rsa

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -p 2222 ec2-user@localhost << 'EOF'
            # 배포 디렉토리로 이동
            cd /home/ec2-user 

            if [ -d "BE" ]; then
              cd BE
              git pull origin main
            else
              git clone https://github.com/s-dev-ggongggong/BE.git BE
              cd BE
            fi

            python3 -m venv venv
            source venv/bin/activate

            pip install -r requirements.txt

            if [ ! -f db/e_sol.db ]; then
              sqlite3 db/e_sol.db < schema.sql
            fi

            export FLASK_APP=app.py
            flask db upgrade

            # 서버 재시작
            if pgrep -f 'gunicorn' > /dev/null; then
              echo "Gunicorn 돌고 있음 . 재시작..."
              pkill -f "gunicorn"
            fi

            nohup gunicorn --bind 0.0.0.0:8000 app:app > gunicorn.log 2>&1 &
            echo "Gunicorn server started"
          EOF

      - name: Clean up SSH Tunnel
        if: always()
        run: |
          pkill -f "ssh -f -N -L 2222:${{ secrets.E_BACK }}:22"
